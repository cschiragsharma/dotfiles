# vim: ft=sh
SSH_AGENT_PID=""

function do_ssh_add {

redo=1
#
while [[ $redo != 0 ]]
do
		ssh-add
		if [[ $? == 0 ]]; then
			redo=0
		else
			echo "FAIL: Try again"
		fi
done
}


# If not running interactivly, lets bugger off
[ -z "$PS1" ] && return
# if we already set things up lets do it again
[ ! -z "$LOGGED_IN" ] && return


trap "echo No ^C here" INT TERM EXIT


echo -en > ~/.env_load
# save environment vars for future rescue
if [[ ! -z $DISPLAY && ! -z $SSH_TTY ]]; then
	echo "export DISPLAY=$DISPLAY" >> ~/.env_load
fi

if [[ ! -z $KRB5CCNAME ]]; then
	echo "export KRB5CCNAME=$KRB5CCNAME" >> ~/.env_load
fi


function have_agent_connection {
    [[ ( ! -z $SSH_AUTH_SOCK ) && -e $SSH_AUTH_SOCK && -S $SSH_AUTH_SOCK ]]
}

# check if we have a running AUTH SOCK
if ( have_agent_connection ); then
	# tunneld AUTH and we have an identitiy file so add it  
	echo "tunneled auth"
	echo "export SSH_AUTH_SOCK=$SSH_AUTH_SOCK" > ~/.ssh_agent.sh
	if [[ -z $SSH_AGENT_PID && -e ~/.ssh/id_rsa ]]; then
		do_ssh_add
	fi
# check if a previous session has started an agent
elif [[ -e ~/.ssh_agent.sh ]]; then
    . ~/.ssh_agent.sh
    if ( have_agent_connection ); then
        echo "connecting to current agent"
    else
        echo "starting new agent"
        ssh-agent -s > ~/.ssh_agent.sh
        . ~/.ssh_agent.sh
    fi
    do_ssh_add
else
	echo "starting new agent"
	ssh-agent -s > ~/.ssh_agent.sh
	. ~/.ssh_agent.sh
    do_ssh_add
fi

# make sure we have an agent before syncing
if [[ -e ~/bin/sync_links.sh ]]; then
	echo "sync"
	~/bin/sync_links.sh
fi

# we have login in over ssh 
if [[ ! -z $SSH_TTY ]]; then
	DO_SCREEN=1
fi

# use : as a delminator the ssh command in ~/bin will increment teh SCEREEN_LEVEL and comboulate the TERM when sshing
SCREEN_LEVEL=${TERM#*:}
TERM=${TERM%:*}
if [[ $SCREEN_LEVEL = $TERM ]]; then
	unset SCREEN_LEVEL
fi
# source addtional based on TERM
if [[ -e ~/.bash_login.${TERM} ]]; then
	. ~/.bash_login.${TERM}
else
	now=`date  +"%d-%m-%Y %H:%M"`
	echo "$now $TERM" >> ~/log/login.terms
fi

trap - INT TERM EXIT

LOGGED_IN=1

export LOGGED_IN SCREEN_LEVEL TERM
if [[ ! -z $DO_SCREEN ]]; then
	screen -D -R
fi

# for the moment lets not do fancy ssh-agent stuffs
return

# vim: ft=sh
