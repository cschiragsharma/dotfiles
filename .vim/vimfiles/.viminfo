# This viminfo file was generated by Vim 7.0.
# You may edit it if you're careful!

# Value of 'encoding' when this file was written
*encoding=latin1


# hlsearch on (H) or off (h):
~h
# Last Search Pattern:
~MSle0~/REW

# Last Substitute Search Pattern:
~MSle0&\s.*[^:]\s

# Last Substitute String:
$

# Command Line History (newest to oldest):
:q
:w
:wq
:93
:!sh
:q!
:GLVS
:'<,'>s/\s.*[^:]\s/ 1 /
:s
:help GetLatestVimScripts
:GetLatestVimScripts
:'<,'>s/\s.*[^:]\s/ 0 /
:'<,'>s/\s.*[^:]/ 0 /
:'<,'>s/\s.*[^:]/\s0\s/
:'<,'>s/\s.*[^:]\s/\s0\s/
:registers
:re
:'<,'>s/\s
:'<,'>s/\s[^:]
:qa

# Search String History (newest to oldest):
? ^\d\{3}\/
?/REW
?/remote_
?/smtpd_recipient
?/smtpd_
?/mynetworks
?/log
? ^-------
?/\s.*[^:]\s
? \s.*[^:]
?/\s.*\s[^:]
? \s[^:]
?/\s.*\s
?/\W.*\W
?/\w.*\w
?/\b.*\b
?^
?remote-mount
?remote
?^"=

# Expression History (newest to oldest):

# Input Line History (newest to oldest):

# Input Line History (newest to oldest):

# Registers:
"0	LINE	0
	    This program is free software; you can redistribute it and/or modify
	    it under the terms of the GNU General Public License as published by
	    the Free Software Foundation; either version 2 of the License, or
	    (at your option) any later version.
	
	    This program is distributed in the hope that it will be useful,
	    but WITHOUT ANY WARRANTY; without even the implied warranty of
	    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	    GNU General Public License for more details.
	
	    You should have received a copy of the GNU General Public License along
	    with this program; if not, write to the Free Software Foundation, Inc.,
	    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
""1	LINE	0
	
"2	LINE	0
	" zipPlugin.vim: Handles browsing zipfiles
	"            PLUGIN PORTION
	" Date:			Sep 14, 2005
	" Maintainer:	Charles E Campbell, Jr <drchipNOSPAM at campbellfamily dot biz>
	" License:		Vim License  (see vim's :help license)
	" Copyright:    Copyright (C) 2005 Charles E. Campbell, Jr. {{{1
	"               Permission is hereby granted to use and distribute this code,
	"               with or without modifications, provided that this copyright
	"               notice is copied with it. Like anything else that's free,
	"               zipPlugin.vim is provided *as is* and comes with no warranty
	"               of any kind, either expressed or implied. By using this
	"               plugin, you agree that in no event will the copyright
	"               holder be liable for any damages resulting from the use
	"               of this software.
	
	" ---------------------------------------------------------------------
	" Initialization: {{{1
	let s:keepcpo= &cpo
	set cpo&vim
	
	" ---------------------------------------------------------------------
	" Public Interface: {{{1
	augroup zip
	 au!
	 au BufReadCmd   zipfile:*	call zip#Read(expand("<amatch>"), 1)
	 au FileReadCmd  zipfile:*	call zip#Read(expand("<amatch>"), 0)
	 au BufWriteCmd  zipfile:*	call zip#Write(expand("<amatch>"))
	 au FileWriteCmd zipfile:*	call zip#Write(expand("<amatch>"))
	
	 if has("unix")
	  au BufReadCmd   zipfile:*/*	call zip#Read(expand("<amatch>"), 1)
	  au FileReadCmd  zipfile:*/*	call zip#Read(expand("<amatch>"), 0)
	  au BufWriteCmd  zipfile:*/*	call zip#Write(expand("<amatch>"))
	  au FileWriteCmd zipfile:*/*	call zip#Write(expand("<amatch>"))
	 endif
	
	 au BufReadCmd   *.zip		call zip#Browse(expand("<amatch>"))
	augroup END
	
	" ------------------------------------------------------------------------
	" Modelines And Restoration: {{{1
	let &cpo= s:keepcpo
	unlet s:keepcpo
	" vim:ts=8 fdm=marker
"3	LINE	0
	" vimball : construct a file containing both paths and files
	" Author: Charles E. Campbell, Jr.
	" GetLatestVimScripts: 1502 1 :AutoInstall: vimball.vim
	" Copyright: (c) 2004-2006 by Charles E. Campbell, Jr.
	"            The VIM LICENSE applies to Vimball.vim, and Vimball.txt
	"            (see |copyright|) except use "Vimball" instead of "Vim".
	"            No warranty, express or implied.
	"  *** ***   Use At-Your-Own-Risk!   *** ***
	
	" ---------------------------------------------------------------------
	"  Load Once: {{{1
	if &cp || exists("g:loaded_vimball") || exists("g:loaded_vimballplugin")
	 finish
	endif
	let g:loaded_vimballplugin= 1
	
	let s:keepcpo= &cpo
	set cpo&vim
	
	" ------------------------------------------------------------------------------
	" Public Interface: {{{1
	com! -ra -na=+ -bang MkVimball call vimball#MkVimball(<line1>,<line2>,<bang>0,<f-args>)
	com! -na=0 UseVimball  call vimball#Vimball(1)
	com! -na=0 VimballList call vimball#Vimball(0)
	au BufEnter *.vba.gz,*.vba.bz2,*.vba.zip call vimball#Decompress(expand("<amatch>"))
	au BufEnter *.vba call vimball#ShowMesg("Source this file to extract it! (:so %)")
	
	let &cpo= s:keepcpo
	unlet s:keepcpo
	" =====================================================================
	" Modelines: {{{1
	" vim: fdm=marker
"4	LINE	0
	" Vim plugin for converting a syntax highlighted file to HTML.
	" Maintainer: Bram Moolenaar <Bram@vim.org>
	" Last Change: 2003 Apr 06
	
	" Don't do this when:
	" - when 'compatible' is set
	" - this plugin was already loaded
	" - user commands are not available.
	if !&cp && !exists(":TOhtml") && has("user_commands")
	  command -range=% TOhtml :call Convert2HTML(<line1>, <line2>)
	
	  func Convert2HTML(line1, line2)
	    if a:line2 >= a:line1
	      let g:html_start_line = a:line1
	      let g:html_end_line = a:line2
	    else
	      let g:html_start_line = a:line2
	      let g:html_end_line = a:line1
	    endif
	
	    runtime syntax/2html.vim
	
	    unlet g:html_start_line
	    unlet g:html_end_line
	  endfunc
	
	endif
"5	LINE	0
	" tarPlugin.vim -- a Vim plugin for browsing tarfiles
	" Copyright (c) 2002, Michael C. Toren <mct@toren.net>
	" Distributed under the GNU General Public License.
	"
	" Updates are available from <http://michael.toren.net/code/>.  If you
	" find this script useful, or have suggestions for improvements, please
	" let me know.
	" Also look there for further comments and documentation.
	"
	" This part only sets the autocommands.  The functions are in autoload/tar.vim.
	
	augroup tar
	  au!
	  au BufReadCmd   tarfile:*	call tar#Read(expand("<amatch>"), 1)
	  au FileReadCmd  tarfile:*	call tar#Read(expand("<amatch>"), 0)
	  au BufWriteCmd  tarfile:*	call tar#Write(expand("<amatch>"))
	  au FileWriteCmd tarfile:*	call tar#Write(expand("<amatch>"))
	
	  if has("unix")
	   au BufReadCmd   tarfile:*/*	call tar#Read(expand("<amatch>"), 1)
	   au FileReadCmd  tarfile:*/*	call tar#Read(expand("<amatch>"), 0)
	   au BufWriteCmd  tarfile:*/*	call tar#Write(expand("<amatch>"))
	   au FileWriteCmd tarfile:*/*	call tar#Write(expand("<amatch>"))
	  endif
	
	  au BufReadCmd   *.tar		call tar#Browse(expand("<amatch>"))
	  au BufReadCmd   *.tar.gz	call tar#Browse(expand("<amatch>"))
	  au BufReadCmd   *.tar.bz2	call tar#Browse(expand("<amatch>"))
	  au BufReadCmd   *.tar.Z	call tar#Browse(expand("<amatch>"))
	  au BufReadCmd   *.tgz		call tar#Browse(expand("<amatch>"))
	augroup END
	
	" vim: ts=8
"6	LINE	0
	" Vim plugin for downloading spell files
	" Maintainer:  Bram Moolenaar <Bram@vim.org>
	" Last Change: 2006 Feb 01
	
	" Exit quickly when:
	" - this plugin was already loaded
	" - when 'compatible' is set
	" - some autocommands are already taking care of spell files
	if exists("loaded_spellfile_plugin") || &cp || exists("#SpellFileMissing")
	  finish
	endif
	let loaded_spellfile_plugin = 1
	
	" The function is in the autoload directory.
	autocmd SpellFileMissing * call spellfile#LoadFile(expand('<amatch>'))
"7	LINE	0
	" Vim plugin with helper function(s) for --remote-wait
	" Maintainer: Flemming Madsen <fma@cci.dk>
	" Last Change: 2004 May 30
	
	" Has this already been loaded?
	if exists("loaded_rrhelper")
	  finish
	endif
	let loaded_rrhelper = 1
	
	" Setup answers for a --remote-wait client who will assume
	" a SetupRemoteReplies() function in the command server
	
	if has("clientserver")
	  function SetupRemoteReplies()
	    let cnt = 0
	    let max = argc()
	
	    let id = expand("<client>")
	    if id == 0
	      return
	    endif
	    while cnt < max
	      " Handle same file from more clients and file being more than once
	      " on the command line by encoding this stuff in the group name
	      let uniqueGroup = "RemoteReply_".id."_".cnt
	
	      " Path separators are always forward slashes for the autocommand pattern.
	      " Escape special characters with a backslash.
	      let f = escape(substitute(argv(cnt), '\\', '/', "g"), ' *,?[{')
	      execute "augroup ".uniqueGroup
	      execute "autocmd ".uniqueGroup." BufUnload ". f ."  call DoRemoteReply('".id."', '".cnt."', '".uniqueGroup."', '". f ."')"
	      let cnt = cnt + 1
	    endwhile
	    augroup END
	  endfunc
	
	  function DoRemoteReply(id, cnt, group, file)
	    call server2client(a:id, a:cnt)
	    execute 'autocmd! '.a:group.' BufUnload '.a:file
	    execute 'augroup! '.a:group
	  endfunc
	
	endif
	
	
	" vim: set sw=2 sts=2 :
"8	LINE	0
	" netrwPlugin.vim: Handles file transfer and remote directory listing across a network
	"            PLUGIN PORTION
	" Date:		Oct 27, 2005
	" Maintainer:	Charles E Campbell, Jr <drchipNOSPAM at campbellfamily dot biz>
	" GetLatestVimScripts: 1075 1 :AutoInstall: netrw.vim
	" Copyright:    Copyright (C) 1999-2005 Charles E. Campbell, Jr. {{{1
	"               Permission is hereby granted to use and distribute this code,
	"               with or without modifications, provided that this copyright
	"               notice is copied with it. Like anything else that's free,
	"               netrw.vim, netrwPlugin.vim, and netrwSettings.vim are provided
	"               *as is* and comes with no warranty of any kind, either
	"               expressed or implied. By using this plugin, you agree that
	"               in no event will the copyright holder be liable for any damages
	"               resulting from the use of this software.
	"
	"  But be doers of the Word, and not only hearers, deluding your own selves {{{1
	"  (James 1:22 RSV)
	" =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
	
	" ---------------------------------------------------------------------
	" Load Once: {{{1
	if exists("g:loaded_netrw")
	 finish
	endif
	if v:version < 700
	 echohl WarningMsg | echo "***netrw*** you need vim version 7.0 for this version of netrw" | echohl None
	 finish
	endif
	let s:keepcpo= &cpo
	set cpo&vim
	
	" ---------------------------------------------------------------------
	" Public Interface: {{{1
	
	" Local Browsing: {{{2
	augroup FileExplorer
	 au!
	 au BufEnter * silent! call s:LocalBrowse(expand("<amatch>"))
	augroup END
	
	" Network Browsing Reading Writing: {{{2
	augroup Network
	 au!
	 if has("win32") || has("win95") || has("win64") || has("win16")
	  au BufReadCmd  file://*		exe "silent doau BufReadPre ".netrw#RFC2396(expand("<amatch>"))|exe 'e '.substitute(netrw#RFC2396(expand("<amatch>")),'file://\(.*\)','\1',"")|exe "silent doau BufReadPost ".netrw#RFC2396(expand("<amatch>"))
	 else
	  au BufReadCmd  file://*		exe "silent doau BufReadPre ".netrw#RFC2396(expand("<amatch>"))|exe 'e '.substitute(netrw#RFC2396(expand("<amatch>")),'file://\(.*\)','\1',"")|exe "silent doau BufReadPost ".netrw#RFC2396(expand("<amatch>"))
	  au BufReadCmd  file://localhost/*	exe "silent doau BufReadPre ".netrw#RFC2396(expand("<amatch>"))|exe 'e '.substitute(netrw#RFC2396(expand("<amatch>")),'file://localhost/\(.*\)','\1',"")|exe "silent doau BufReadPost ".netrw#RFC2396(expand("<amatch>"))
	 endif
	 au BufReadCmd   ftp://*,rcp://*,scp://*,http://*,dav://*,rsync://*,sftp://*	exe "silent doau BufReadPre ".expand("<amatch>")|exe '2Nread "'.expand("<amatch>").'"'|exe "silent doau BufReadPost ".expand("<amatch>")
"9	LINE	0
	" Vim plugin for showing matching parens
	" Maintainer:  Bram Moolenaar <Bram@vim.org>
	" Last Change: 2006 Sep 09
	
	" Exit quickly when:
	" - this plugin was already loaded (or disabled)
	" - when 'compatible' is set
	" - the "CursorMoved" autocmd event is not availble.
	if exists("g:loaded_matchparen") || &cp || !exists("##CursorMoved")
	  finish
	endif
	let g:loaded_matchparen = 1
	
	augroup matchparen
	  " Replace all matchparen autocommands
	  autocmd! CursorMoved,CursorMovedI * call s:Highlight_Matching_Pair()
	augroup END
	
	" Skip the rest if it was already done.
	if exists("*s:Highlight_Matching_Pair")
	  finish
	endif
	
	let cpo_save = &cpo
	set cpo-=C
	
	" The function that is invoked (very often) to define a ":match" highlighting
	" for any matching paren.
	function! s:Highlight_Matching_Pair()
	  " Remove any previous match.
	  if exists('w:paren_hl_on') && w:paren_hl_on
	    3match none
	    let w:paren_hl_on = 0
	  endif
	
	  " Avoid that we remove the popup menu.
	  if pumvisible()
	    return
	  endif
	
	  " Get the character under the cursor and check if it's in 'matchpairs'.
	  let c_lnum = line('.')
	  let c_col = col('.')
	  let before = 0
	
	  let c = getline(c_lnum)[c_col - 1]
	  let plist = split(&matchpairs, '.\zs[:,]')
	  let i = index(plist, c)
	  if i < 0
	    " not found, in Insert mode try character before the cursor
"-	CHAR	0
	8

# File marks:
'0  1  0  /etc/postfix/canonical
'1  1  0  /etc/cron.daily/emergesync.cron
'2  105  0  /etc/ssh/sshd_config
'3  1  0  /etc/ssh/sshd_config
'4  22  0  /etc/ssh/ssh_config
'5  1  0  ~/.ssh/authorized_keys
'6  1  0  /tmp/mutt-vidwall01-right-1000-18656-49
'7  1  0  /tmp/mutt-vidwall01-right-1000-18656-42
'8  94  43  /etc/postfix/main.cf
'9  1  0  /tmp/mutt-vidwall01-right-1000-18656-36

# Jumplist (newest first):
-'  1  0  /etc/postfix/canonical
-'  1  0  /etc/cron.daily/emergesync.cron
-'  12  0  /etc/cron.daily
-'  8  0  /etc/cron.daily
-'  1  0  /etc/cron.daily
-'  105  0  /etc/ssh/sshd_config
-'  1  0  /etc/ssh/sshd_config
-'  22  0  /etc/ssh/ssh_config
-'  1  0  /etc/ssh/ssh_config
-'  1  0  ~/.ssh/authorized_keys
-'  3  0  ~/.ssh/authorized_keys
-'  2  0  ~/.ssh/authorized_keys
-'  1  0  /tmp/mutt-vidwall01-right-1000-18656-49
-'  1  0  /tmp/mutt-vidwall01-right-1000-18656-42
-'  94  43  /etc/postfix/main.cf
-'  345  0  /etc/postfix/main.cf
-'  1  0  /tmp/mutt-vidwall01-right-1000-18656-36
-'  247  0  /etc/postfix/main.cf
-'  259  26  /etc/postfix/main.cf
-'  219  28  /etc/postfix/main.cf
-'  531  6  /etc/postfix/main.cf
-'  254  0  /etc/postfix/main.cf
-'  1  0  /tmp/mutt-vidwall01-right-1000-18656-30
-'  69  0  /etc/postfix/main.cf
-'  1  0  /tmp/mutt-vidwall01-right-1000-18656-23
-'  110  0  /etc/postfix/main.cf
-'  1  0  /etc/postfix/master.cf
-'  1  0  /tmp/mutt-vidwall01-right-1000-18656-17
-'  600  0  /etc/postfix/main.cf
-'  1  0  ~/dead.letter
-'  505  12  /etc/postfix/main.cf
-'  593  47  /etc/postfix/main.cf
-'  569  23  /etc/postfix/main.cf
-'  561  2  /etc/postfix/main.cf
-'  518  36  /etc/postfix/main.cf
-'  43  0  /etc/postfix/main.cf
-'  22  0  /etc/postfix/postfix-script
-'  1  0  /etc/postfix/postfix-script
-'  1  0  /etc/postfix/main.cf
-'  2  89  /etc/mail.rc
-'  1  0  /etc/mail.rc
-'  33  25  /etc/mail/aliases
-'  16  49  /etc/mail/aliases
-'  1  0  /etc/mail/aliases
-'  1  0  /tmp/mutt-vidwall01-right-1000-18656-7
-'  19  8  /tmp/mutt-vidwall01-right-1000-18656-7
-'  1  0  /tmp/mutt-vidwall01-right-1000-18656-3
-'  17  0  /tmp/mutt-vidwall01-right-1000-18656-3
-'  9  37  /etc/make.conf
-'  11  60  /etc/make.conf
-'  1  0  /etc/make.conf
-'  21  0  ~/.bash_profile
-'  1  0  ~/.bash_profile
-'  17  0  ~/.bashrc
-'  10  0  ~/.bashrc
-'  1  0  ~/.bashrc
-'  22  0  ~/.vim/GetLatest/GetLatestVimScripts.dat
-'  1  0  ~/.vim/GetLatest/GetLatestVimScripts.dat
-'  3  0  ~/.vim/GetLatest/GetLatestVimScripts.dat
-'  2  0  ~/.vim/GetLatest/GetLatestVimScripts.dat
-'  5  3  ~/.vim/GetLatest/GetLatestVimScripts.dat
-'  6  0  ~/.vim/GetLatest/GetLatestVimScripts.dat
-'  4  3  ~/.vim/GetLatest/GetLatestVimScripts.dat
-'  7  0  ~/.vim/GetLatest/GetLatestVimScripts.dat
-'  22  0  /home/goraxe.old/.vim/GetLatest/GetLatestVimScripts.dat
-'  2  0  /home/goraxe.old/.vim/GetLatest/GetLatestVimScripts.dat
-'  1  0  /home/goraxe.old/.vim/GetLatest/GetLatestVimScripts.dat
-'  1  0  /home/goraxe.old/.lesshst
-'  15  0  /home/goraxe.old/.lesshst
-'  1  0  ~/404.html.1
-'  1  0  ~/404.html
-'  21  1  ~/404.html
-'  383  0  ~/author.html
-'  366  0  ~/author.html
-'  53  0  ~/author.html
-'  39  0  ~/author.html
-'  40  0  ~/author.html
-'  22  0  ~/author.html
-'  23  0  ~/author.html
-'  1  0  ~/author.html
-'  1  0  ~/attachment
-'  21  0  ~/attachment
-'  1  0  ~/barney
-'  1  1  ~/Untitled1.bak~
-'  1  0  ~/-MiniBufExplorer-
-'  2  0  ~/-MiniBufExplorer-
-'  1  0  ~/Phone nos
-'  1  0  ~/bookmarks.txt~
-'  1  0  ~/bookmarks.txt
-'  2  0  ~/bookmarks.txt
-'  82  0  ~/build-crossgcc.sh
-'  1  0  ~/build-crossgcc.sh
-'  1  0  ~/crontab
-'  13  0  ~/data_rec.md5
-'  28  0  ~/data_rec.md5
-'  14  0  ~/data_rec.md5
-'  1  0  ~/data_rec.md5
-'  1  0  ~/evolution-trace.txt

# History of marks within files (newest to oldest):

> /etc/postfix/canonical
	"	1	0
	^	1	38
	.	1	37
	+	1	37

> /etc/cron.daily/emergesync.cron
	"	1	0

> /etc/ssh/sshd_config
	"	105	0

> /etc/ssh/ssh_config
	"	22	0

> ~/.ssh/authorized_keys
	"	1	0
	^	3	7
	.	4	0
	+	3	222
	+	3	209
	+	4	0

> /tmp/mutt-vidwall01-right-1000-18656-49
	"	1	0

> /tmp/mutt-vidwall01-right-1000-18656-42
	"	1	0

> /etc/postfix/main.cf
	"	94	43
	^	94	44
	.	94	43
	+	77	21
	+	93	0
	+	69	39
	+	254	26
	+	345	0
	+	94	43

> /tmp/mutt-vidwall01-right-1000-18656-36
	"	1	0

> /tmp/mutt-vidwall01-right-1000-18656-30
	"	1	0

> /tmp/mutt-vidwall01-right-1000-18656-23
	"	1	0

> /etc/postfix/master.cf
	"	1	0

> /tmp/mutt-vidwall01-right-1000-18656-17
	"	1	0

> ~/dead.letter
	"	1	0

> /etc/postfix/postfix-script
	"	22	0

> /etc/mail.rc
	"	2	89

> /etc/mail/aliases
	"	33	25
	^	17	26
	.	17	25
	+	33	0
	+	16	50
	+	17	25

> /tmp/mutt-vidwall01-right-1000-18656-7
	"	1	0

> /tmp/mutt-vidwall01-right-1000-18656-3
	"	1	0

> /etc/make.conf
	"	9	37
	^	12	38
	.	12	37
	+	12	33
	+	11	0
	+	12	0
	+	13	0
	+	12	37
